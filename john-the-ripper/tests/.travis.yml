language: c
dist: trusty
services: docker

matrix:
  include:
  #Test JtR using a stable OS/compiler
  - env: TEST="stable;gcc;" BUILD_OPTS="--enable-werror"
  - dist: precise
    env: TEST="stable;usual;gcc;" BUILD_OPTS="--enable-werror"

  #Test JtR using a gcc build with asan and OpenCL
  - compiler: gcc
    env: TEST="usual;ASAN;OPENCL;" F=1

  #Test JtR using a gcc build with asan and OpenCL
  - compiler: gcc    #clang + ASAN + OpenCL build fails
    env: TEST="usual;ASAN;OPENCL;" F=2

  #Test JtR using an ordinary OpenCL build
  - compiler: clang
    env: TEST="usual;OPENCL;" BUILD_OPTS="--enable-werror"

  #Test JtR using a "hot" OS/compiler
  - env: TEST="fresh;ASAN;clang;"        BUILD_OPTS="--enable-werror --enable-ubsan"
  - env: TEST="fresh;ASAN;gcc;"          BUILD_OPTS="--enable-werror --enable-ubsan"
  - env: TEST="fresh;ASAN;EXTRAS;clang;" BUILD_OPTS="--enable-werror --enable-ubsan"
  - env: TEST="fresh;ASAN;EXTRAS;gcc;"   BUILD_OPTS="--enable-werror --enable-ubsan"
  - env: TEST="ztex;ASAN;clang;"         BUILD_OPTS="--enable-ztex --enable-werror"
  - env: TEST="fresh;clang-6;"           BUILD_OPTS="--enable-ubsan"
  - env: TEST="fresh;experimental;"      BUILD_OPTS="--enable-patch"
  - env: TEST="fresh;ASAN;clang;"        FUZZ="check"

  #Test using TS - CPU formats
  - compiler: clang
    env: TEST="TS;"

  #Test using TS - OpenCL
  - compiler: clang
    env: TEST="TS;OPENCL;"

  #Test --internal using TS
  - compiler: clang
    env: TEST="TS --internal;OPENCL;"

  #Test OpenMP with OMP_NUM_THREADS=1
  - env: TEST="usual;ASAN;" OMP_NUM_THREADS=1

  #Test a non OpenMP build with clang (unusual test environment)
  - compiler: clang
    env: TEST="usual;ASAN;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror"

  #Test a non SIMD build. OMP and non OpenMP. Note: non OpenMP + clang build fails
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=1
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=2
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=1
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=2

  #Enable alignment checking ubsan
  - compiler: clang
    env: TEST="usual;OPENCL;" BUILD_OPTS="--enable-ubsan"

  #Test fuzzing
  - env: TEST="fresh;POCL;clang;" FUZZ="zzuf" BUILD_OPTS="--enable-fuzz"

  - env: TEST="fresh;POCL;afl-clang-fast;" FUZZ="afl" BUILD_OPTS="--enable-fuzz"

  - env: TEST="fresh;POCL;" FUZZ="internal" BUILD_OPTS="--enable-fuzz"

  - env: TEST="fresh;POCL;" FUZZ="full" BUILD_OPTS="--enable-fuzz"

  #Test --restore using TS
  #- env: TEST="TS --restore;" # WE KNOW IT IS NOT WORKING

  #Test the Ubuntu Snap package
  - dist: xenial
    env: TEST="snap;"

  allow_failures:
  - env: TEST="fresh;experimental;"      BUILD_OPTS="--enable-patch"

  - env: TEST="TS;"

  - env: TEST="TS;OPENCL;"

  - env: TEST="TS --internal;OPENCL;"

  - env: TEST="usual;ASAN;" OMP_NUM_THREADS=1

  - env: TEST="usual;ASAN;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror"

  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=1
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=2
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=1
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=2

  - env: TEST="usual;OPENCL;" BUILD_OPTS="--enable-ubsan"

  - env: TEST="fresh;POCL;clang;" FUZZ="zzuf" BUILD_OPTS="--enable-fuzz"

  - env: TEST="fresh;POCL;afl-clang-fast;" FUZZ="afl" BUILD_OPTS="--enable-fuzz"

  - env: TEST="fresh;POCL;" FUZZ="internal" BUILD_OPTS="--enable-fuzz"

  - env: TEST="fresh;POCL;" FUZZ="full" BUILD_OPTS="--enable-fuzz"

  - env: TEST="snap;"

  fast_finish: true

script:
  - .travis/travis-ci.sh

