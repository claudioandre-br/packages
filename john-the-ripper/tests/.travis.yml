language: c
dist: trusty
services: docker

matrix:
  include:
  #Test JtR using a stable OS/compiler
  - env: TEST="centos6;gcc;" BUILD_OPTS="--enable-werror"
  - dist: precise
    env: TEST="ubuntu12;usual;gcc;" BUILD_OPTS="--enable-werror"

  #DON'T run a test on JtR using a gcc build and OpenCL
   # with ASAN (gcc + OpenCL + ASAN) it works
   # regular (gcc + OpenCL build fails) build fails => (could not find module by name='fglrx')

  #Test JtR using a clang build and OpenCL
   # (clang + ASAN + OpenCL build fails)
  - compiler: clang
    env: TEST="usual;OPENCL;" BUILD_OPTS="--enable-werror"

  #Test JtR using a "hot" OS/compiler
  - env: TEST="fresh;ASAN;clang;"        BUILD_OPTS="--enable-werror --enable-ubsan"
  - env: TEST="fresh;ASAN;gcc;slow;"     BUILD_OPTS="--enable-werror --enable-ubsan" FUZZ="slow"
  - env: TEST="fresh;ASAN;EXTRAS;clang;" BUILD_OPTS="--enable-werror --enable-ubsan"
  - env: TEST="fresh;ASAN;EXTRAS;gcc;"   BUILD_OPTS="--enable-werror --enable-ubsan"
  - env: TEST="ztex;ASAN;clang;"         BUILD_OPTS="--enable-ztex --enable-werror"  FUZZ="ztex"
  - env: TEST="fresh;clang-6;"           BUILD_OPTS="--enable-ubsan"
  - env: TEST="experimental;"            BUILD_OPTS="--enable-werror"

  #Test using TS - CPU formats
  - compiler: clang
    env: TEST="TS;"

  #Test using TS - OpenCL
  - compiler: clang
    env: TEST="TS;OPENCL;"

  #Test --internal using TS
  - compiler: clang
    env: TEST="TS --internal;OPENCL;"

  #Test OpenMP with OMP_NUM_THREADS=1
  - env: TEST="usual;ASAN;" OMP_NUM_THREADS=1

  #Test --enable-openmp-for-fast-formats
  - env: TEST="usual;ASAN;" BUILD_OPTS="--enable-openmp-for-fast-formats"

  #Test a non OpenMP build with clang (unusual test environment)
  - compiler: clang
    env: TEST="usual;ASAN;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror"

  #Test a non SIMD build. OMP and non OpenMP. Note: non OpenMP + clang build fails
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=1
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=2
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=1
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=2

  #Enable alignment checking ubsan
  - compiler: clang
    env: TEST="usual;OPENCL;" BUILD_OPTS="--enable-ubsan"

  #Test fuzzing
  - env: TEST="OpenCL;POCL;"        BUILD_OPTS="--enable-fuzz" FUZZ="internal"  # --fuzz

  - env: TEST="OpenCL;POCL;"        BUILD_OPTS="--enable-fuzz" FUZZ="full"      # --test-full=1

  #Test --restore using TS
  #- env: TEST="TS --restore;" # WE KNOW IT IS NOT WORKING

  #Test the Ubuntu Snap package
  - dist: xenial
    env: TEST="snap;" FUZZ="snap"

  - os: osx
    osx_image: xcode10.2
    env: TEST="MacOS;" OPENCL="yes"

  - os: osx
    osx_image: xcode9.4
    env: TEST="MacOS;" OPENCL="yes"

  allow_failures:
  - env: TEST="experimental;"            BUILD_OPTS="--enable-werror"

  - env: TEST="TS;"

  - env: TEST="TS;OPENCL;"

  - env: TEST="TS --internal;OPENCL;"

  - env: TEST="usual;ASAN;" OMP_NUM_THREADS=1

  - env: TEST="usual;ASAN;" BUILD_OPTS="--enable-openmp-for-fast-formats"

  - env: TEST="usual;ASAN;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror"

  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=1
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=2
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=1
  - env: TEST="usual;ASAN;OPENCL;" BUILD_OPTS="--disable-native-tests --disable-openmp --enable-werror CPPFLAGS='-mno-sse2 -mno-mmx -U__SSE__'" F=2

  - env: TEST="usual;OPENCL;" BUILD_OPTS="--enable-ubsan"

  - env: TEST="OpenCL;POCL;afl-clang-fast;" BUILD_OPTS="--enable-fuzz" FUZZ="afl"

  - env: TEST="OpenCL;POCL;clang;"  BUILD_OPTS="--enable-fuzz" FUZZ="zzuf"

  - env: TEST="OpenCL;POCL;"        BUILD_OPTS="--enable-fuzz" FUZZ="internal"  # --fuzz

  - env: TEST="OpenCL;POCL;"        BUILD_OPTS="--enable-fuzz" FUZZ="full"      # --test-full=1

  - env: TEST="snap;" FUZZ="snap"

  fast_finish: true

script:
  - .travis/travis-ci.sh

